[tool.poetry]
name = "aio-aws"
version = "0.5.1"
description = "aio-aws"
authors = [
    "Darren Weber <dazza-codes@github.com>",
]
license = "Apache-2.0"

readme = "README.md"  # Markdown files are supported
repository = "https://github.com/dazza-codes/aio-aws.git"
homepage = "https://github.com/dazza-codes/aio-aws"

keywords = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Utilities",
]

include = ["aio_aws/**/*"]
exclude = ["tests/**/*"]

packages = [
    {include = "aio_aws"}
]

#[tool.poetry.scripts]
#aio-aws-app = "aio_aws.aio_aws_app:app"

[tool.poetry.dependencies]
python = "^3.6"
dataclasses = {version = "*", python = "^3.6.0"}

# try to update to the latest aiobotocore
aiobotocore = {extras = ["boto3"], version = "^1.1.0"}
awscli = {version = "^1.18", optional = true}

async-generator = "^1.10"

requests = "^2.23.0"
typer = "^0.3.2"
tinydb = "^3.15"

#
# Optional packages
#

databases = {extras = ["postgresql", "mysql", "sqlite"], version = "*", optional = true}
aioredis = {version = "^1.3", optional = true}

# avoid ujson in 'full' extra
starlette = {version = "^0.13.2", optional = true}
aiofiles = {version = "^0.4.0", optional = true}
graphene = {version = "^2.1.6", optional = true}
itsdangerous = {version = "^1.1.0", optional = true}
jinja2 = {version = "^2.11.1", optional = true}
python-multipart = {version = "^0.0.5", optional = true}
pyyaml = {version = "5.2", optional = true}
uvicorn = {version = "^0.11.3", optional = true}


[tool.poetry.extras]
awscli = ["awscli"]

database = [
    "aioredis",
    "databases",
]

server = [
    "starlette",
    "aiofiles",
    "graphene",
    "itsdangerous",
    "jinja2",
    "python-multipart",
    "pyyaml",
    "uvicorn",
    "aioredis",
    "databases",
]


[tool.poetry.dev-dependencies]

# In development, pin the AWS SDK libs to compatible
# versions provided by AWS lambda python runtime.
# For AWS Lambda, the latest versions are listed at:
# https://docs.aws.amazon.com/lambda/latest/dg/lambda-python.html
boto3 = "~1.14.40"
botocore = "~1.17.40"
moto = {version = "~1.3.16", extras = ["server"]}

# requirements.dev is used to manage and install other
# development dependencies, to avoid excessive delays
# in poetry dep-tree resolution for all project + dev deps;
# this also helps to avoid excess conflicts between dev-deps
# and actual project dependencies.  It is not as reliable
# as using poetry to manage it all, so liberal use of
# 'pip check' is recommended.


[build-system]
requires = ["poetry>=1.0"]
build-backend = "poetry.masonry.api"
