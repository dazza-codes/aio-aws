* KnoxPy Summary

  The presentation will follow the story of a developer wanting to
  create the a python package for analyzing malicious attempted ssh
  logins to their home machine using an [[https://sqlite.org/index.html][SQLite3]] database. In the end
  we will have created a [[https://pypi.org/][PyPi]] package that has documentation on
  [[https://readthedocs.org/][readthedocs]] generated with [[http://www.sphinx-doc.org/en/stable/][sphinx]] and is tested with [[https://docs.pytest.org/en/latest/][pytest]]. While
  pytest, sphinx, and pypi deployment are all topics that can be
  discussed in detail only the basics will be covered.

  I will focus on showing the power of SQLite3 in python with the
  =sqlite3= package in the standard library. I will not assume that
  the user has used =SQL= before and show examples of simple =SELECT=,
  =INSERT=, =CREATE TABLE=, transactions, bulk inserts for
  performance, =fsync= performance, and determining is SQLite is the
  correct database to use.

  For advanced users this talk will still have equal benefit. I will
  show how to use custom [[https://www.sqlite.org/datatype3.html][SQLite datatypes]] for serialization and
  deserialization of datetimes, numpy arrays, and JSON. Additionally,
  since SQLite runs within the program we will use python functions
  for queries not possible with complex SQL statements.

  This talk will be based on two of my blog posts on [[https://chrisostrouchov.com][chrisostrouchov.com]].
    - [[https://chrisostrouchov.com/post/python_sqlite/][sqlite with python]]
    - [[https://chrisostrouchov.com/post/cd_tested_doc_pypi_package/][continuous delivery, tested, and documented pypi packages]]
      (currently drafted will be available mid April)

  Packages Used:
    - sqlite3 (detailed)
    - pytest (brief)
    - sphinx (brief)

  All source code and documents will be available in the [[https://gitlab.com/costrouc/knoxpy-sqlite-pypi-readthedocs][Gitlab repo]]
